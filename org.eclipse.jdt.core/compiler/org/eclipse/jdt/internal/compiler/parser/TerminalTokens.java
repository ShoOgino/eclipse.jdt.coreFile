/*******************************************************************************
 * Copyright (c) 2000, 2012 IBM Corporation and others.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * This is an implementation of an early-draft specification developed under the Java
 * Community Process (JCP) and is made available for testing and evaluation purposes
 * only. The code is not compatible with any specification of the JCP.
 *
 *
 * Contributors:
 *     IBM Corporation - initial API and implementation
 *******************************************************************************/
package org.eclipse.jdt.internal.compiler.parser;

/**
 * IMPORTANT NOTE: These constants are dedicated to the internal Scanner implementation.
 * It is mirrored in org.eclipse.jdt.core.compiler public package where it is API.
 * The mirror implementation is using the backward compatible ITerminalSymbols constant
 * definitions (stable with 2.0), whereas the internal implementation uses TerminalTokens
 * which constant values reflect the latest parser generation state.
 */
/**
 * Maps each terminal symbol in the java-grammar into a unique integer.
 * This integer is used to represent the terminal when computing a parsing action.
 *
 * Disclaimer : These constant values are generated automatically using a Java
 * grammar, therefore their actual values are subject to change if new keywords
 * were added to the language (for instance, 'assert' is a keyword in 1.4).
 */
public interface TerminalTokens {

	// special tokens not part of grammar - not autogenerated
	int TokenNameNotAToken = 0,
		TokenNameWHITESPACE = 1000,
		TokenNameCOMMENT_LINE = 1001,
		TokenNameCOMMENT_BLOCK = 1002,
		TokenNameCOMMENT_JAVADOC = 1003;

	int TokenNameIdentifier = 22,
		TokenNameabstract = 58,
		TokenNameassert = 89,
		TokenNameboolean = 33,
		TokenNamebreak = 90,
		TokenNamebyte = 34,
		TokenNamecase = 106,
		TokenNamecatch = 104,
		TokenNamechar = 35,
		TokenNameclass = 76,
		TokenNamecontinue = 91,
		TokenNameconst = 113,
		TokenNamedefault = 100,
		TokenNamedo = 92,
		TokenNamedouble = 36,
		TokenNameelse = 108,
		TokenNameenum = 102,
		TokenNameextends = 103,
		TokenNamefalse = 46,
		TokenNamefinal = 59,
		TokenNamefinally = 107,
		TokenNamefloat = 37,
		TokenNamefor = 93,
		TokenNamegoto = 114,
		TokenNameif = 94,
		TokenNameimplements = 111,
		TokenNameimport = 105,
		TokenNameinstanceof = 17,
		TokenNameint = 38,
		TokenNameinterface = 99,
		TokenNamelong = 39,
		TokenNamenative = 60,
		TokenNamenew = 44,
		TokenNamenull = 47,
		TokenNamepackage = 101,
		TokenNameprivate = 61,
		TokenNameprotected = 62,
		TokenNamepublic = 63,
		TokenNamereturn = 95,
		TokenNameshort = 40,
		TokenNamestatic = 56,
		TokenNamestrictfp = 64,
		TokenNamesuper = 42,
		TokenNameswitch = 96,
		TokenNamesynchronized = 57,
		TokenNamethis = 43,
		TokenNamethrow = 97,
		TokenNamethrows = 110,
		TokenNametransient = 65,
		TokenNametrue = 48,
		TokenNametry = 98,
		TokenNamevoid = 41,
		TokenNamevolatile = 66,
		TokenNamewhile = 77,
		TokenNameIntegerLiteral = 49,
		TokenNameLongLiteral = 50,
		TokenNameFloatingPointLiteral = 51,
		TokenNameDoubleLiteral = 52,
		TokenNameCharacterLiteral = 53,
		TokenNameStringLiteral = 54,
		TokenNamePLUS_PLUS = 2,
		TokenNameMINUS_MINUS = 3,
		TokenNameEQUAL_EQUAL = 19,
		TokenNameLESS_EQUAL = 13,
		TokenNameGREATER_EQUAL = 14,
		TokenNameNOT_EQUAL = 20,
		TokenNameLEFT_SHIFT = 18,
		TokenNameRIGHT_SHIFT = 15,
		TokenNameUNSIGNED_RIGHT_SHIFT = 16,
		TokenNamePLUS_EQUAL = 78,
		TokenNameMINUS_EQUAL = 79,
		TokenNameMULTIPLY_EQUAL = 80,
		TokenNameDIVIDE_EQUAL = 81,
		TokenNameAND_EQUAL = 82,
		TokenNameOR_EQUAL = 83,
		TokenNameXOR_EQUAL = 84,
		TokenNameREMAINDER_EQUAL = 85,
		TokenNameLEFT_SHIFT_EQUAL = 86,
		TokenNameRIGHT_SHIFT_EQUAL = 87,
		TokenNameUNSIGNED_RIGHT_SHIFT_EQUAL = 88,
		TokenNameOR_OR = 30,
		TokenNameAND_AND = 29,
		TokenNamePLUS = 4,
		TokenNameMINUS = 5,
		TokenNameNOT = 70,
		TokenNameREMAINDER = 8,
		TokenNameXOR = 23,
		TokenNameAND = 21,
		TokenNameMULTIPLY = 7,
		TokenNameOR = 25,
		TokenNameTWIDDLE = 71,
		TokenNameDIVIDE = 9,
		TokenNameGREATER = 12,
		TokenNameLESS = 11,
		TokenNameLPAREN = 24,
		TokenNameRPAREN = 26,
		TokenNameLBRACE = 68,
		TokenNameRBRACE = 32,
		TokenNameLBRACKET = 6,
		TokenNameRBRACKET = 72,
		TokenNameSEMICOLON = 28,
		TokenNameQUESTION = 27,
		TokenNameCOLON = 69,
		TokenNameCOMMA = 31,
		TokenNameDOT = 1,
		TokenNameEQUAL = 74,
		TokenNameAT = 45,
		TokenNameELLIPSIS = 112,
		TokenNameARROW = 109,
		TokenNameCOLON_COLON = 10,
		TokenNameBeginLambda = 55,
		TokenNameBeginTypeArguments = 75,
		TokenNameElidedSemicolonAndRightBrace = 73,
		TokenNameEOF = 67,
		TokenNameERROR = 115;
}
